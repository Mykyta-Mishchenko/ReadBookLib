@model SignInViewModel

@inject SignInManager<User> signInManager

@{
	var providers = await signInManager.GetExternalAuthenticationSchemesAsync();
}
<div class="d-flex justify-content-center">
	<div class="col-md-4 col-8 border rounded p-3 mt-3 bg-white">
		<form asp-controller="Identity" asp-action="SignIn" method="post">
			<div class="form-group">
				@Html.ValidationSummary()
				<label asp-for="Email"></label>
				<input type="text" asp-for="Email" class="form-control" />
				<span class="text-danger" asp-validation-for="Email"></span>
			</div>
			<div class="form-group">
				<label asp-for="Password"></label>
				<input type="password" asp-for="Password" class="form-control"/>
				<span class="text-danger" asp-validation-for="Password"></span>
			</div>
			<div class="form-group">
				Remember me:<input type="checkbox" asp-for="RememberMe" />
			</div>
			<button type="submit" class="btn btn-primary">Sign in</button>
		</form>
		<div class="alert alert-info mt-2">
			If you don't have an account, please sign up <a asp-action="SignUp">Sign up</a>
		</div>
		<p>
			You also can choose another way to sign in.
		</p>
		<form asp-controller="Identity" asp-action="ExternalLogin" method="post">
			<div class="form-group">
				@foreach (var provider in providers)
				{
					<button class="btn btn-primary" type="submit" name="provider" value="@provider.Name">Login with @provider.DisplayName</button>
				}
			</div>
		</form>
	</div>
</div>
